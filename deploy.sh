#!/bin/bash
set -euo pipefail

# --- C·∫§U H√åNH D·ª∞ √ÅN ---
# Facebook Next.js App
FB_REPO_URL="https://github.com/faker6996/facebook.git"
FB_WORKDIR="/home/infvn/fb/fb_src"
FB_BRANCH="main"
FB_DOCKER_SERVICE_NAME="web"

# Chat Server (.NET)
CHAT_REPO_URL="https://github.com/faker6996/chat-server.git"
CHAT_WORKDIR="/home/infvn/fb/chat_server_src"
CHAT_BRANCH="main"
CHAT_DOCKER_SERVICE_NAME="chat-server"

# --- H√ÄM LOG ---
log() {
  echo "[$(date +'%Y-%m-%d %H:%M:%S')] $*"
}

# --- BI·∫æN TR·∫†NG TH√ÅI ---
SHOULD_BUILD_CHAT_SERVER=false

# ==============================================================================
# B·∫ÆT ƒê·∫¶U QU√Å TR√åNH DEPLOY
# ==============================================================================

log "üöÄ B·∫Øt ƒë·∫ßu deploy t·ªïng h·ª£p (Facebook & Chat Server)"

# --- 1. X·ª¨ L√ù SOURCE CODE FACEBOOK ---
log "-----------------------------------------------------"
log "üåê X·ª≠ l√Ω source code Facebook Next.js"
log "-----------------------------------------------------"

if [ ! -d "$(dirname "$FB_WORKDIR")" ]; then
  mkdir -p "$(dirname "$FB_WORKDIR")"
fi

if [ -d "$FB_WORKDIR/.git" ]; then
  log "üîÑ Repo Facebook ƒë√£ t·ªìn t·∫°i, pull v·ªÅ branch $FB_BRANCH"
  cd "$FB_WORKDIR"
  git fetch origin
  git checkout "$FB_BRANCH"
  git reset --hard "origin/$FB_BRANCH"
else
  log "üì• Clone m·ªõi Facebook v·ªÅ $FB_WORKDIR"
  git clone "$FB_REPO_URL" "$FB_WORKDIR"
  cd "$FB_WORKDIR"
  git checkout "$FB_BRANCH"
fi

log "‚úÖ ƒê√£ c·∫≠p nh·∫≠t source code Facebook t·∫°i: $(pwd)"

# --- 2. X·ª¨ L√ù SOURCE CODE CHAT SERVER ---
log "-----------------------------------------------------"
log "üí¨ X·ª≠ l√Ω source code Chat Server .NET"
log "-----------------------------------------------------"

if [ ! -d "$(dirname "$CHAT_WORKDIR")" ]; then
  mkdir -p "$(dirname "$CHAT_WORKDIR")"
fi

if [ -d "$CHAT_WORKDIR/.git" ]; then
  log "üîÑ Repo Chat Server ƒë√£ t·ªìn t·∫°i, ki·ªÉm tra thay ƒë·ªïi tr√™n branch $CHAT_BRANCH"
  cd "$CHAT_WORKDIR"
  
  BEFORE_PULL_HASH=$(git rev-parse HEAD)
  log "Commit hash hi·ªán t·∫°i: $BEFORE_PULL_HASH"

  git fetch origin
  git checkout "$CHAT_BRANCH"
  git reset --hard "origin/$CHAT_BRANCH"
  
  AFTER_PULL_HASH=$(git rev-parse HEAD)
  log "Commit hash m·ªõi nh·∫•t: $AFTER_PULL_HASH"

  if [ "$BEFORE_PULL_HASH" != "$AFTER_PULL_HASH" ]; then
    log "‚ú® Ph√°t hi·ªán c√≥ thay ƒë·ªïi m·ªõi cho Chat Server. S·∫Ω ti·∫øn h√†nh build l·∫°i."
    SHOULD_BUILD_CHAT_SERVER=true
  else
    log "‚úÖ Kh√¥ng c√≥ thay ƒë·ªïi m·ªõi cho Chat Server. B·ªè qua b∆∞·ªõc build."
  fi
else
  log "üì• Clone m·ªõi Chat Server v·ªÅ $CHAT_WORKDIR"
  git clone "$CHAT_REPO_URL" "$CHAT_WORKDIR"
  cd "$CHAT_WORKDIR"
  git checkout "$CHAT_BRANCH"
  log "‚ú® ƒê√¢y l√† l·∫ßn clone ƒë·∫ßu ti√™n. S·∫Ω ti·∫øn h√†nh build."
  SHOULD_BUILD_CHAT_SERVER=true
fi

# ƒê√É X√ìA: ƒêo·∫°n ki·ªÉm tra file .env c·ªßa chat-server ƒë√£ ƒë∆∞·ª£c x√≥a v√¨ kh√¥ng c√≤n c·∫ßn thi·∫øt.
log "‚úÖ ƒê√£ c·∫≠p nh·∫≠t source code Chat Server t·∫°i: $(pwd)"


# --- 3. D·ª™NG V√Ä BUILD L·∫†I DOCKER ---
log "-----------------------------------------------------"
log "üê≥ X·ª≠ l√Ω Docker Compose"
log "-----------------------------------------------------"

log "üìÇ Di chuy·ªÉn t·ªõi th∆∞ m·ª•c project ch√≠nh: $FB_WORKDIR"
cd "$FB_WORKDIR"

log "üõë D·ª´ng c√°c container c≈© n·∫øu c√≥"
docker compose -f docker-compose.prod.yml down --remove-orphans || true

log "üî® Build l·∫°i image cho $FB_DOCKER_SERVICE_NAME (lu√¥n th·ª±c hi·ªán)"
docker compose -f docker-compose.prod.yml build "$FB_DOCKER_SERVICE_NAME"

if [ "$SHOULD_BUILD_CHAT_SERVER" = "true" ]; then
  log "üî® Chat Server c√≥ thay ƒë·ªïi, build l·∫°i image cho $CHAT_DOCKER_SERVICE_NAME"
  docker compose -f docker-compose.prod.yml build "$CHAT_DOCKER_SERVICE_NAME"
else
  log "üëç B·ªè qua build Chat Server."
fi

log "üöÄ Kh·ªüi ƒë·ªông l·∫°i to√†n b·ªô c√°c container..."
docker compose -f docker-compose.prod.yml up -d

log "‚úÖ Ho√†n t·∫•t deploy!"
